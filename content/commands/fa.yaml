1:
-   name: '{print}'
    explanation: 'یک چیزی رو با دستور `{print}` چاپ کن.'
    example: 'مثال: {print} Hello welcome to Hedy!'
    demo_code: '{print} خوش آمدید!'
-   name: '{ask}'
    explanation: با دستور `{ask}` یک سوالی رو بپرسید.
    example: 'مثال: {ask} What is your favorite color?'
    demo_code: '{ask} رنگ مورد علاقه ات چیه?'
-   name: '{echo}'
    explanation: با دستور `{echo}` یک چیز را تکرار کنید.
    example: 'مثال: {echo} so your favorite color is '
    demo_code: "{ask} What is your favorite color?\n{echo} so your favorite color is"
-   name: '{print} emojis'
    explanation: یک شکلک رو با دستور `{print}` چاپ کن
    example: 'مثال: {print} 🙋‍ 🌍 ❗'
    demo_code: '{print} 🙋 🌍 ❗'
-   name: '{forward}'
    explanation: با دستور `{forward}` یک خط بکش.
    example: 'مثال: {forward} 100'
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: با دستور `{turn}` لاکپشت رو بچرخون
    example: 'مثال: {turn}'
    demo_code: "{forward} 25\n{turn} {left}\n{forward} 25\n{turn} {right}"
2:
-   name: '{is}'
    explanation: با دستور `{is}` به یک کلمه، یک اسم بدید. اسم می‌تونه به انتخاب خودت باشه.
    example: 'مثال: name {is} Hedy.'
    demo_code: "name {is} Hedy\n{print} welcome name"
-   name: '{ask}'
    explanation: با دستور `{ask}` یک چیزی بپرسید. توجه کنید که به یک اسم نیاز دارید تا بتونید از دستور `{is}` استفاده کنید.
    example: 'مثال: color {is} {ask} What is your favorite color?'
    demo_code: "color {is} {ask} What is your favorite color?\n{print} color is your favorite!"
-   name: '{sleep}'
    explanation: بذار هِدی برای یک یا چند ثانیه توقف کنه.
    example: 'مثال: {sleep} 2 '
    demo_code: "{print} Let me think for one second...\n{sleep}\n{print} Hmm.. I need 3 more seconds...\n{sleep} 3\n{print} Eureka! Ive got it!"
-   explanation: با دستور `{is}` به یک عدد، یک اسم بده. اسم می‌تونه هر چیزی که می‌خوای باشه.
    example: 'مثال: angle {is} 90'
    demo_code: "angle {is} 90\n{turn} angle\n{forward} 100"
    name: is - turtle
3:
-   name: choose_random
    explanation: Choose a random word from a group with `{at}` and `{random}`
    example: "Example: animals {is} dog, cat, kangaroo."
    demo_code: |-
        animals {is} dog, cat, kangaroo
        {print} animals {at} {random}
-   name: "{add}"
    explanation: "add an item to a list"
    example: "Example: {add} dog {to_list} animals"
    demo_code: |-
        animals {is} cow, cat
        {add} dog {to_list} animals
-   name: "{remove}"
    explanation: "remove an item from a list"
    example: "Example: {remove} dog {from} animals"
    demo_code: |-
        animals {is} cat, dog, cow
        {remove} dog {from} animals
4:
-   name: "{print}"
    explanation: "print exactly using quotation marks"
    example: "Example: {print} 'Hello welcome to Hedy.'"
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: "{is}"
    explanation: "Give a name to some text and `{print}` without quotation marks"
    example: "Example: name {is} Hedy."
    demo_code: |-
        name {is} Hedy
        {print} 'my name is ' name
-   name: "{ask}"
    explanation: "ask something with `{ask}`."
    example: "Example: color {is} {ask} 'What is your favorite color?'"
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {print} color ' is your favorite!'
5:
-   name: "{print}"
    explanation: "print exactly using quotation marks"
    example: "Example: {print} 'Hello welcome to Hedy.'"
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: "{ask}"
    explanation: "ask something with `{ask}`."
    example: "Example: color {is} {ask} 'What is your favorite color?'"
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {print} color ' {is} your favorite!'
-   name: "{if}"
    explanation: "Make a choice with `{if}`"
    example: "Example: {if} color {is} green {print} 'pretty!' {else} {print} 'meh'"
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {if} color {is} green {print} 'pretty!' {else} {print} 'meh'
-   name: "{if} with turtle"
    explanation: "Make a choice with `{if}`"
    example: "Example: {if} answer {is} far {forward} 100 {else} {forward} 5"
    demo_code: |-
        answer {is} {ask} 'How far should I walk?'
        {if} answer {is} far {forward} 100 {else} {forward} 5
-   name: "{in}"
    explanation: "Check elements with `{in}`"
    example: "Example: {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'"
    demo_code: |-
        pretty_colors {is} green, yellow
        color {is} {ask} 'What {is} your favorite color?'
        {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'
6:
-   name: "{print}"
    explanation: "print exactly using quotation marks"
    example: "Example: {print} '5 times 5 is ' 5 * 5"
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: "{ask}"
    explanation: "{ask} for a calculation and check whether it is correct."
    example: "Example: answer {is} {ask} 'What is 10 plus 10?'"
    demo_code: |-
        answer = {ask} 'What is 10 plus 10?'
        {if} answer {is} 20 {print} 'Yes!' {else} {print} 'Oops'
-   name: "`{ask}` {and} `{if}` turtle"
    explanation: "{ask} the user how many angles they want"
    example: "Example: angles {is} {ask} 'How many angles?'"
    demo_code: |-
        angles = {ask} 'How many angles?'
        angle = 360 / angles
        {forward} 50
7:
-   name: "{print}"
    explanation: "print exactly using quotation marks"
    example: "Example: {print} 'Hello welcome to Hedy.'"
    demo_code: "{print} 'Hello welcome to Hedy.'"
-   name: "{ask}"
    explanation: "ask something with `{ask}`."
    example: "Example: color = {ask} 'What is your favorite color?'"
    demo_code: |-
        color = {ask} 'What is your favorite color?'
        {print} color ' is your favorite!'
-   name: "{if}"
    explanation: "Make a choice with `{if}`"
    example: "Example: {if} color {is} green {print} 'pretty!' {else} {print} 'meh'"
    demo_code: |-
        color = {ask} 'What is your favorite color?'
        {if} color {is} green {print} 'pretty!' {else} {print} 'meh'
-   name: "{repeat} - turtle"
    explanation: "repeat a line of code with `{repeat}`."
    example: "Example: {repeat} 3 {times} {forward} 10"
    demo_code: |-
        {repeat} 3 {times} {forward} 10
8:
-   name: "{print}"
    explanation: "print something. Remember to use a quotation mark for literal printing."
    example: "Example: {print} '5 times 5 is ' 5 * 5"
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: "{ask}"
    explanation: "ask for the answer to a sum and check if it is correct. We can now print 2 lines."
    example: "Example: answer {is} {ask} 'What is 5 plus 5?'"
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        else
            {print} 'Oops!'
            {print} 'The answer is 10'
-   name: "`{repeat}` with turtle"
    explanation: "{repeat} multiple lines"
    example: "Example: draw a square"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
9:
-   name: "`{if}` with multiple lines"
    explanation: "The answer of a sum of questions with '{ask}' and see if it is correct. Now we print out two lines."
    example: "Example: answer = {ask} 'What is 20 plus 20?'"
    demo_code: |-
        answer = {ask} 'What is 20 plus 20?'
        {if} answer {is} 20
            {print} 'Well done!!'
            {print} 'The answer is indeed' answer
        else
            {print} 'Wrong'
            {print} 'The answer is 20'
-   name: "`{repeat}` and turtle"
    explanation: "{repeat} multiple lines"
    example: "Example: create a square"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
10:
-   name: "{print}"
    explanation: "print something. Remember to use a quotation mark for literal printing."
    example: "Example: {print} '5 times 5 is ' 5 * 5"
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: "{for} with a list"
    explanation: "print all things in a list "
    example: "Example: {for} animal {in} animals"
    demo_code: |-
        animals {is} dog, cat, blobfish
        {for} animal {in} animals
          {print} 'I love ' animal
11:
-   name: "{for} loop"
    explanation: "We can use `{for}` with a {range}"
    example: "for counter {in} {range} 1 {to} 5"
    demo_code: |-
        {for} counter {in} {range} 1 {to} 5
            {print} counter
-   name: "{ask}"
    explanation: "ask for the answer to a sum and check if it is correct. We can now print 2 lines."
    example: "Example: answer = {ask} 'What is 5 plus 5?'"
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        else
            {print} 'Oops!'
            {print} 'The answer is 10'
12:
-   name: "float directly"
    explanation: "Decimal numbers"
    example: "{print} 2.5 + 2.5"
    demo_code: |
        {print} 'Calculate away!'
        {print} 'Two and a half plus two and a half is...'
        {print} 2.5 + 2.5
-   name: "assign text"
    explanation: "Text with quotation marks after ="
    example: "name = 'Hedy'"
    demo_code: |
        name = 'Hedy the Robot'
        {print} 'Hello ' name
-   name: "quotes after {if} comparison"
    explanation: "Text with quotation marks after {if}"
    example: "name = 'Hedy'"
    demo_code: |
        name = {ask} 'Who are you?'
        {if} name = 'Hedy'
            {print} 'Hi there!'
-   name: "quotes in list"
    explanation: "A list with quotation marks"
    example: "name = 'Hedy', 'Felienne'"
    demo_code: |
        superheroes = 'Iron Man', 'Batman', 'Superman'
        {print} superheroes {at} {random}
13:
-   name: "{and}"
    explanation: "Two parts both need to be correct"
    example: "if 3+2 {is} 5 {and} 2+2 {is} 4"
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {and} answer2 {is} 4
            {print} 'Both answers are correct!'
        else
            {print} 'At least one answer is wrong!'
-   name: "{or}"
    explanation: "At least 1 of the two parts need to be correct. If both are correct, it is also fine."
    example: "if 3+2 {is} 5 {or} 2+2 {is} 4"
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {or} answer2 {is} 4
            {print} 'At least one answer is correct!'
        else
            {print} 'Both answers are wrong!'
14:
-   name: "Smaller"
    explanation: "We use the `<` to check if the first number is smaller than the second number."
    example: "For example: age < 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age < 13
            {print} 'You are younger than me!'
-   name: "Bigger"
    explanation: "We use the `>` to check if the first number is bigger than the second number."
    example: "For example: age > 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age > 13
            {print} 'You are older than me!'
-   name: "Equal"
    explanation: "We use the `==` to check if two things are the same."
    example: "For example: answer == 25"
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer == 25
            {print} 'That {is} correct!'
-   name: "Not equal"
    explanation: "We use the `!=` to check if two things are not the same. "
    example: "For example: answer != 25"
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer != 25
            {print} 'That is not correct!'

-   name: "Smaller {or} equal"
    explanation: "We use the `<=` to check if the first number is smaller than or equal to the second number."
    example: "For example: age <= 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age <= 12
            {print} 'You are younger than me!'

-   name: "Bigger or equal"
    explanation: "We use the `>=` to check if the first number is bigger than or equal to the second number."
    example: "For example: age >= 14"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age >= 14
            {print} 'You are older than me!'
15:
-   name: "{while}"
    explanation: "We can use the `{while}` loop with not equal"
    example: "Example: {while} correct_answer != 25"
    demo_code: |-
        answer = 0
        {while} answer != 25
            answer = {ask} 'What is 5 times 5?'
        {print} 'A correct answer has been given'
-   name: "Smaller {while}"
    explanation: "We can also use the `{while}` loop with `<` and `>`. "
    example: "For example: {while} count < 3"
    demo_code: |-
        count = 1
        {while} count < 3
            {print} 'We do this ' 3 - count ' more times'
            count = count + 1
        {print} 'We are done'
16:
-   name: "square brackets"
    explanation: "Lists with square brackets"
    example: "For example: fruit = ['apple', 'banana', 'cherry']"
    demo_code: |-
        fruit = ['apple', 'banana', 'cherry']
        {print} fruit
-   name: "Get an item from a list"
    explanation: "To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!"
    example: "For example: firstfruit = fruit[1]"
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        firstfruit = fruit[1]
        {print} firstfruit
-   name: "Get a random item from a list"
    explanation: "To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!"
    example: "For example: random_fruit {is} fruit[random]"
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        random_fruit = fruit[random]
        {print} random_fruit
17:
-   name: "{elif}"
    explanation: "`{elif}`."
    example: "{elif} a {is} 5:"
    demo_code: |-
        a = 2
        {if} a == 1:
            {print} 'a is 1'
        {elif} a == 2:
            {print} 'a is 2'
        {else}:
            {print} 'a is not 1 or 2'
-   name: "{print}"
    explanation: "When we use a `{for}`, we need to put a `:` behind the `{for}` statement!"
    example: "for i {in} {range} 1 {to} 10:"
    demo_code: |-
        {for} i {in} {range} 1 {to} 12:
            {print} i
        {print} 'Ready or not, here I come!'
-   name: "{if}"
    explanation: "We need to do the same with all of our `{if}` statements"
    example: "if colour {is} green:'"
    demo_code: |-
        colour = {ask} 'What is your favorite color?'
        {if} colour == 'green':
            {print} 'Your favorite colour is green'
        {else}:
            {print} 'Your favorite colour is not green'
18:
-   name: "{print}"
    explanation: "With `{print}` you need to use parentheses"
    example: "{print}"
    demo_code: |-
        {print}('hi!')
-   name: "{print} with var"
    explanation: "With `{print}` you need to use parentheses and commas if you {print} more items"
    example: "{print}"
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you {print} more items
    example: '{print}'
    demo_code: "name = 'Hedy'\n{print}('my name is ', name)"
-   name: ask something with {input}
    explanation: Use `{input}` instead of `{ask}` to ask something
    example: '{input}'
    demo_code: "name = {input}('What is your name?')\n{print}('So your name is ', name)"
